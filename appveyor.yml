# appveyor.yml

# Building, testing and deployment for Windows

# Syntax for this file:
# https://www.appveyor.com/docs/appveyor-yml

environment:
  YKPERS_VERSION: "1.19.3"
  LIBUSB_VERSION: "1.0.22"
  PY_VERSION: "3.6.8"
  PYOTHERSIDE_VERSION: "1.5.4"
  YKPERS_BASEURL: https://developers.yubico.com/yubikey-personalization/Releases

  matrix:
    - platform: x86
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QT_VERSION: 5.12\msvc2017
      PYTHON: C:\Python36
      PY_ARCH: win32
      WIN_ARCH: win32
      LIBUSB_DLL_FOLDER: MS32
      VCVARSALLPATH: C:\"Program Files (x86)\Microsoft Visual Studio"\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      VCVARSALL: x86

    - platform: x64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      QT_VERSION: 5.12\msvc2017_64
      PYTHON: C:\Python36-x64
      PY_ARCH: amd64
      WIN_ARCH: win64
      LIBUSB_DLL_FOLDER: MS64
      VCVARSALLPATH: C:\"Program Files (x86)\Microsoft Visual Studio"\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      VCVARSALL: x64

init:
  # Needed for jom to work.
  - call %VCVARSALLPATH% %VCVARSALL%
  # Add python and Qt to PATH
  - set PATH=%PYTHON%;%PYTHON%\Scripts;C:\Qt\%QT_VERSION%\bin;C:\Qt\Tools\QtCreator\bin;%PATH%

install:
  - choco install swig -y
  - choco upgrade swig

  # Build and install PyOtherSide 
  # Reference: https://pyotherside.readthedocs.io/en/latest/#building-for-windows
  - mkdir lib
  - ps: wget "https://github.com/thp/pyotherside/archive/$env:PYOTHERSIDE_VERSION.zip" -OutFile ".\lib\pyotherside-$env:PYOTHERSIDE_VERSION.zip"
  - cd .\lib
  - 7z x pyotherside-%PYOTHERSIDE_VERSION%.zip
  - cd .\pyotherside-%PYOTHERSIDE_VERSION%
  - ps: (Get-Content .\src\qmldir).replace('pyothersideplugin', 'pyothersideplugin1') | Set-Content .\src\qmldir
  - ps: Clear-Content python.pri
  - ps: Add-Content python.pri "PYTHON_CONFIG = python3-config`nQMAKE_LIBS += -L$env:PYTHON\libs -lpython36`nQMAKE_CXXFLAGS += -I$env:PYTHON\include`n"
  - qmake
  - jom
  - jom install
  - cd %APPVEYOR_BUILD_FOLDER%

build_script:
  - qmake yubikey-manager-qt.pro
  - qmake -o ykman-gui\Makefile ykman-gui\ykman-gui.pro
  - jom

after_build:

  - ps: wget "$env:YKPERS_BASEURL/ykpers-$env:YKPERS_VERSION-$env:WIN_ARCH.zip" -OutFile "ykpers-$env:YKPERS_VERSION-$env:WIN_ARCH.zip"
  - 7z x ykpers-%YKPERS_VERSION%-%WIN_ARCH%.zip -o".\ykpers"
  - ps: Copy-Item .\ykpers\bin\*.dll .\ykman-gui\release -Force 

  - ps: wget "https://github.com/libusb/libusb/releases/download/v$env:LIBUSB_VERSION/libusb-$env:LIBUSB_VERSION.7z" -OutFile "libusb-$env:LIBUSB_VERSION.7z"
  - 7z x libusb-%LIBUSB_VERSION%.7z -o".\libusb"
  - ps: Copy-Item ".\libusb\$env:LIBUSB_DLL_FOLDER\dll\*.dll" .\ykman-gui\release -Force

  - ps: wget https://www.python.org/ftp/python/$env:PY_VERSION/python-$env:PY_VERSION-embed-$env:PY_ARCH.zip -OutFile python-$env:PY_VERSION-embed-$env:PY_ARCH.zip
  - 7z x python-%PY_VERSION%-embed-%PY_ARCH%.zip -o".\ykman-gui\release"
  # Use Qt deployment tool on executable
  - windeployqt .\ykman-gui\release\ykman-gui.exe -qmldir=.\ykman-gui\qml --no-translations --angle --release
  # Add python dependencies to release folder
  - ps: Copy-Item .\ykman-gui\pymodules .\ykman-gui\release -recurse
  # Remove .pyc files from release folder
  - ps: Get-ChildItem -File -Include *.pyc -Recurse | Remove-Item -Force
  - ps: Get-ChildItem -Include __pycache__ -Recurse | Remove-Item -Force
  # Remove .cpp source files
  - ps: Get-ChildItem -Include *.cpp -Recurse | Remove-Item -Force
  # Remove object files
  - ps: Get-ChildItem -Include *.obj -Recurse | Remove-Item -Force
  # Add CLI executable to release folder
  - copy .\ykman-cli\release\ykman.exe .\ykman-gui\release
  # Create zip for deployment
  - set ARTIFACT_NAME=%APPVEYOR_REPO_BRANCH%-%WIN_ARCH%
  - if defined APPVEYOR_REPO_TAG_NAME set ARTIFACT_NAME=%APPVEYOR_REPO_TAG_NAME%-%WIN_ARCH%
  - 7z a yubikey-manager-qt-%ARTIFACT_NAME%.zip .\ykman-gui\release\*
  # Verify that the cli tool can run
  - copy .\ykman-cli\test.py .\ykman-gui\release
  - cd .\ykman-gui\release
  - python test.py
  - cd %APPVEYOR_BUILD_FOLDER%

artifacts:
  - path: yubikey-manager-qt-$(ARTIFACT_NAME).zip

deploy:
  - provider: S3
    access_key_id: $(AWS_KEY_ID)
    secret_access_key: $(AWS_SECRET_KEY)
    bucket: $(AWS_BUCKET)
    folder: "yubikey-manager-qt"
    region: eu-west-1
    set_public: true
